(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{210:function(a,e,t){"use strict";t.r(e);var i=t(0),s=Object(i.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"tailwind"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tailwind","aria-hidden":"true"}},[a._v("#")]),a._v(" Tailwind")]),a._v(" "),t("p",[a._v("We use the default Tailwind CSS config to help control the layouts within your application.")]),a._v(" "),t("p",[a._v("This gives you un-opinionated granular control over your application, making the smallest of tweaks with ease.")]),a._v(" "),t("p",[a._v("There are 3 ways you can manage the asset pipeline here.")]),a._v(" "),t("ul",[t("li",[a._v("Your own pipeline.")]),a._v(" "),t("li",[a._v("Laravel Mix.")]),a._v(" "),t("li",[a._v("Tailstrom.")])]),a._v(" "),t("h3",{attrs:{id:"laravel-mix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#laravel-mix","aria-hidden":"true"}},[a._v("#")]),a._v(" Laravel Mix")]),a._v(" "),t("div",{staticClass:"danger custom-block"},[t("p",[a._v("If you are also using Tailwind for your project then you might face certain conflicts as Mix doesn't have the ability to process 2 different Tailwind configs, read our "),t("strong",[a._v("Tailstrom")]),a._v(" section to find out how")])]),a._v(" "),t("h3",{attrs:{id:"tailstrom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tailstrom","aria-hidden":"true"}},[a._v("#")]),a._v(" Tailstrom")]),a._v(" "),t("blockquote",[t("p",[a._v("Resolving conflicts with multiple Tailwind configs and Laravel Mix")])]),a._v(" "),t("p",[a._v("By default Tailwind doesn't need a config file published, it will use the defaults. This is what we use - but if your project has a Tailwind config then when you compile Maelstrom it will include your custom config instead.")]),a._v(" "),t("p",[a._v("To resolve this issue, we provide a standalone CSS compiler which just imports Tailwind and exports it to a file. You can either export this file and have Mix process it again e.g. to use "),t("code",[a._v("mix.version()")]),a._v(" or you can leave the file as it is.")]),a._v(" "),t("p",[a._v("To export the CSS you can run")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("npx tailstrom -o public/css/maelstrom.css\n")])])]),t("p",[a._v("You have 2 other additional options "),t("strong",[a._v("(type npx tailstrom --help for full listing)")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Pass in a custom Tailwind config")]),a._v("\nnpx tailstrom -c tailwind.backend.js\n")])])]),t("p",[a._v("You can also choose not to minify the CSS with")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Disable minification")]),a._v("\nnpx tailstrom --minify"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false\n")])])]),t("p",[a._v("Once your CSS has exported everything else should be as normal, you can leave the React entries within your Mix config.")])])},[],!1,null,null,null);e.default=s.exports}}]);